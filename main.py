import random

import telebot
from telebot import types

from json_handler import ExpeditionsData
import logging
from users_handler import load_users, add_user_in_file

logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(message)s',
    handlers=[
        logging.FileHandler('arhont_bot.log', encoding='utf-8'),
        logging.StreamHandler()
    ]
)

users_log = load_users()

BOT_TOKEN = ""
bot = telebot.TeleBot(BOT_TOKEN)

# —Å—Å—ã–ª–∫–∞ –Ω–∞ –∞–Ω–∫–µ—Ç—É –∫–∞–Ω–¥–∏–¥–∞—Ç–∞
url_anketa = "https://forms.gle/BoXqMuKwVwyphhn58"

expeditions_data = ExpeditionsData('history.json')
years = ["2013 –≥.", "2014 –≥.", "2015 –≥.", "2016 –≥.", "2017 –≥.", "2018 –≥.", "2019 –≥.", "2020 –≥.", "2021 –≥.", "2022 –≥.", "2023 –≥.", "2024 –≥.", "2025 –≥."]

timeout = 60

# —á—Ç–æ —Ö–æ—Ç–µ–ª–æ—Å—å –±—ã –µ—â—ë:
# –≤—Å–µ –±–æ–ª—å—à–∏–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –±–ª–æ–∫–∏ –∑–∞–ø–∏—Ö–Ω—É—Ç—å –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã –∏ –ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∏—Ö


@bot.message_handler(commands=['start', 'restart'])
def start_dialog(message):
    user = message.from_user
    user_info = f"{user.id} (@{user.username}) {user.first_name} {user.last_name}"

    welcome_text = ""

    if str(user.id) not in users_log:
        add_user_in_file(user.id)
        users_log.add(str(user.id))
        logging.info(f"–ù–û–í–´–ô –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨: {user_info}")
        logging.info(f"–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users_log)}")
        welcome_text = "–ê—Ä—Ö–æ–Ω—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç–µ–±—è! ü•∞\n\n–ï—Å–ª–∏ —Ç—ã –ª—é–±–∏—à—å –ø—Ä–∏—Ä–æ–¥—É, —Å–æ–Ω –≤ –ø–∞–ª–∞—Ç–∫–µ –∏ –∑–∞–≤—Ç—Ä–∞–∫–∏ –Ω–∞ —Å–≤–µ–∂–µ–º " \
                       "–≤–æ–∑–¥—É—Ö–µ ‚Äî —Ç–µ–±–µ —Ç–æ—á–Ω–æ –∫ –Ω–∞–º! –ù–∞–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –Ω–æ–≤–æ–µ, –ø—É—Ç–µ—à–µ—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –Ω–µ–∏–∑–≤–µ–¥–∞–Ω–Ω—ã–µ " \
                       "–º–µ—Å—Ç–∞!\n\n–•–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å, –≥–¥–µ –º—ã —É–∂–µ –ø–æ–±—ã–≤–∞–ª–∏ –∏, —á—Ç–æ —Ä–∞—Å–∫–æ–ø–∞–ª–∏? ‚Äî –ó–∞–¥–∞–≤–∞–π –≤–æ–ø—Ä–æ—Å—ã, —Å —Ä–∞–¥–æ—Å—Ç—å—é " \
                       "–Ω–∞ –≤—Å—ë –æ—Ç–≤–µ—Ç–∏–º! "
        # –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –î–∞–º–∏—Ä—É –æ –Ω–æ–≤–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        bot.send_message(1275982334, f"–î–∞–º–∏—Ä, –ø—Ä–∏—Ñ—Ñ–∫–∏, —Å–µ–π—á–∞—Å –≤ –±–æ—Ç–∞ —É–∂–µ –∑–∞—à–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users_log)}\n"
                                     f"–ö–æ–Ω–∫—Ä–µ—Ç–Ω–æ —Å–µ–π—á–∞—Å –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è @{user.username}")
    else:
        welcome_text = (
            "–ú—ã —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–∏–π –∞—Ä—Ö–µ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –æ—Ç—Ä—è–¥ \"–ê—Ä—Ö–æ–Ω—Ç\" üíÄ \n"
            "–ú–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å –≤–æ–ø—Ä–æ—Å..."
        )

    chat_id = message.chat.id

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)

    btn1 = types.KeyboardButton("–ö—Ç–æ –≤—ã?")
    btn2 = types.KeyboardButton("–ö–∞–∫–∏–µ –≤—ã?")
    btn3 = types.KeyboardButton("–ê —á—ë –∫–æ–ø–∞–µ—Ç–µ??")
    btn4 = types.KeyboardButton("–ê –∫–∞–∫ –∫ –≤–∞–º –ø–æ–ø–∞—Å—Ç—å?")
    btn5 = types.KeyboardButton("–°–æ–±—Ä–∞–Ω–∏—è –∏ –ø—Ä–æ—á–µ–µ...")
    markup.add(btn1, btn2, btn3, btn4, btn5)

    bot.send_message(chat_id, welcome_text, reply_markup=markup)
    logging.info(f"–ö–æ–º–∞–Ω–¥–∞ /start –æ—Ç: {user_info}")


@bot.message_handler(func=lambda message: message.text == "–ö—Ç–æ –≤—ã?")
def who_we_are(message):
    chat_id = message.chat.id

    # bot.answer_callback_query(chat_id, "–ö—Ç–æ –º—ã?")
    about_us = "–ú—ã –ø–µ—Ä–≤—ã–π —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–∏–π –∞—Ä—Ö–µ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –æ—Ç—Ä—è–¥ –≤ –†–æ—Å—Å–∏–∏, " \
               "–∞ –∫–∞–∂–¥–æ–µ –ª–µ—Ç–æ –ø—Ä–æ–≤–æ–¥–∏–º –≤ —ç–∫—Å–ø–µ–¥–∏—Ü–∏—è—Ö, –ø—É—Ç–µ—à–µ—Å—Ç–≤—É—è –ø–æ –≤—Å–µ–π —Å—Ç—Ä–∞–Ω–µ –∏ –¥–∞–∂–µ –∑–∞ –≥—Ä–∞–Ω–∏—Ü–µ–π!\n\n" \
               "–í—ã–µ–∑–∂–∞–µ–º –º—ã –æ–±—ã—á–Ω–æ –≤ –∫–æ–Ω—Ü–µ –∏—é–ª—è, –∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è —Ç–æ–ª—å–∫–æ –∫ –Ω–∞—á–∞–ª—É —É—á—ë–±—ã. " \
               "–ê—Ä—Ö–æ–Ω—Ç - —ç—Ç–æ –Ω–µ —Ç–æ–ª—å–∫–æ –ø—Ä–æ –∞—Ä—Ö–µ–æ–ª–æ–≥–∏—é, –Ω–µ–∑–∞–±—ã–≤–∞–µ–º–æ–µ –ª–µ—Ç–æ, " \
               "–Ω–æ –∏ –ø—Ä–æ —Å–∞–º—ã—Ö –±–ª–∏–∑–∫–∏—Ö –∏ –≤–µ—Ä–Ω—ã—Ö –¥—Ä—É–∑–µ–π."

    # bot.send_message(chat_id, about_us)

    del_mes = bot.send_message(chat_id, "–ó–∞–≥—Ä—É–∂–∞–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —Ñ–æ—Ç–æ...", parse_mode='Markdown')

    try:
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ –∏–∑ —Ñ–∞–π–ª–∞
        with open('images/who.jpg', 'rb') as photo:
            bot.send_photo(chat_id, photo, caption=about_us, timeout=timeout)
    except FileNotFoundError:
        bot.send_message(chat_id, about_us,
                         parse_mode='Markdown')

    bot.delete_message(chat_id, del_mes.message_id)

    back_message(chat_id)


# –í–∞–π–±
@bot.message_handler(func=lambda message: message.text == "–ö–∞–∫–∏–µ –≤—ã?")
def vibe_message(message):
    chat_id = message.chat.id

    del_mes = bot.send_message(chat_id, "–ó–∞–≥—Ä—É–∂–∞–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —Ñ–æ—Ç–æ...", parse_mode='Markdown')

    random_n = random.randint(0, 43)
    try:
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ –∏–∑ —Ñ–∞–π–ª–∞
        with open(f'images/–≤–∞–π–±/–í–∞–π–±_{random_n}.jpg', 'rb') as photo:
            bot.send_photo(chat_id, photo,
                           caption="–í–æ—Ç —Ç–≤–æ—è –≤–∞–π–± —Ñ–æ—Ç–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –¥–∞—Å—Ç –∑–∞—Ä—è–¥ —ç–Ω–µ—Ä–≥–∏–∏ —Å–ª–æ–≤–Ω–æ —á–∞—à–∫–∞ –∫–æ—Ñ–µ! ü§ó", timeout=timeout)
    except FileNotFoundError:
        logging.info(f"–†–∞–Ω–¥–æ–º–Ω–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è {random_n} –Ω–µ –Ω–∞—à–ª–∞—Å—å")

    bot.delete_message(chat_id, del_mes.message_id)

    text = "–ö–∞–∂–¥—ã–π –æ—Ç—Ä—è–¥ –∏–º–µ–µ—Ç —Å–≤–æ–π –Ω–µ–ø–æ–≤—Ç–æ—Ä–∏–º—ã–π –¥—É—Ö. " \
           "–ï–≥–æ —Ç—ã —Å–º–æ–∂–µ—à—å –æ—â—É—Ç–∏—Ç—å, –ø–æ–µ—Ö–∞–≤ —Å –Ω–∞–º–∏ –Ω–∞ —Å–µ–∑–æ–Ω, " \
           "–Ω–æ –º—ã –ø–æ–ø—Ä–æ–±—É–µ–º –ø–µ—Ä–µ–¥–∞—Ç—å —á–µ—Ä–µ–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –º—É–∑—ã–∫—É –∏ –≤–∏–¥–µ–æ."

    markup_inline = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton("—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ üì∏",
                                      url="https://drive.google.com/drive/folders/1USTWWbUK9HZWwxBdQ4AMMCWa6mREYnS6?dmr=1&ec=wgc-drive-globalnav-goto")
    btn2 = types.InlineKeyboardButton("–º—É–∑—ã–∫–∞ üéß",
                                      url="https://vk.com/audios-47403562?z=audio_playlist-47403562_1")
    btn3 = types.InlineKeyboardButton("–≤–∏–¥–µ–æ üéû",
                                      url="https://vk.com/sao_arhont?z=video-47403562_456239125%2Fvideos-47403562%2Fpl_-47403562_-2")
    markup_inline.add(btn1)
    markup_inline.add(btn2, btn3)

    bot.send_message(
        chat_id,
        text,
        reply_markup=markup_inline,
        parse_mode='Markdown'
    )

    back_message(chat_id)


# –ß–æ–∫–æ–ø–∞–π–∫–∏
@bot.message_handler(func=lambda message: message.text in ["–ê —á—ë –∫–æ–ø–∞–µ—Ç–µ??", "–ê —á—ë –µ—â—ë –∫–æ–ø–∞–µ—Ç–µ?"])
def dig_message(message):
    chat_id = message.chat.id

    text = "–£ –ê—Ä—Ö–æ–Ω—Ç–∞ –±—ã–ª–æ –º–Ω–æ–≥–æ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π, –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å –ø—Ä–æ –ª—é–±—É—é –∏–∑ –Ω–∏—Ö"

    back_message(chat_id, mes=text, komissar=True, other_btn=years)


# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —ç–∫—Å–ø–µ–¥–∏—Ü–∏–∏ –∑–∞ –≥–æ–¥
@bot.message_handler(func=lambda message: message.text in years)
def year_of_expedition(message):
    chat_id = message.chat.id

    year = int(message.text[:4])
    bot.send_message(
        chat_id,
        expeditions_data.get_expedition_info(year),
        parse_mode='HTML'
    )

    del_mes = bot.send_message(chat_id, "–ó–∞–≥—Ä—É–∂–∞–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —Ñ–æ—Ç–æ...", parse_mode='Markdown')

    media = expeditions_data.get_media_album(year)
    if media is not None:
        bot.send_media_group(chat_id, media, timeout=timeout)

    bot.delete_message(chat_id, del_mes.message_id)

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("–ê —á—ë –µ—â—ë –∫–æ–ø–∞–µ—Ç–µ?")
    markup.add(btn1)

    bot.send_message(
        chat_id,
        "–•–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ?",
        reply_markup=markup,
        parse_mode='Markdown'
    )


# –°—Å—ã–ª–∫–∏
@bot.message_handler(func=lambda message: message.text == "–ê –∫–∞–∫ –∫ –≤–∞–º –ø–æ–ø–∞—Å—Ç—å?")
def search_message(message):
    chat_id = message.chat.id

    text = "–í–æ—Ç —Å—Å—ã–ª–æ—á–∫–∏, –≥–¥–µ –±—É–¥—É—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏: "

    markup_inline = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton("–Ω–∞—à —Ç–≥", url="https://t.me/CAO_arhont")
    btn2 = types.InlineKeyboardButton("–Ω–∞—à –≤–∫", url="https://vk.com/sao_arhont")
    markup_inline.add(btn1, btn2)

    bot.send_message(
        chat_id,
        text,
        reply_markup=markup_inline,
        parse_mode='Markdown'
    )

    text2 = "–ê –µ—â—ë –∑–∞–ø–æ–ª–Ω—è–π –∞–Ω–∫–µ—Ç—É –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –∏ —Å —Ç–æ–±–æ–π –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–≤—è–∂—É—Ç—Å—è!"

    markup_inline2 = types.InlineKeyboardMarkup()
    btn3 = types.InlineKeyboardButton("–∞–Ω–∫–µ—Ç–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞", url=url_anketa)
    markup_inline2.add(btn3)

    bot.send_message(
        chat_id,
        text2,
        reply_markup=markup_inline2,
        parse_mode='Markdown'
    )

    back_message(chat_id, "–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –Ω–∞—Å!", True, other_btn=["–°–æ–±—Ä–∞–Ω–∏—è –∏ –ø—Ä–æ—á–µ–µ..."])


# –ö–æ–º–∏—Å—Å–∞—Ä
@bot.message_handler(func=lambda message: message.text == "–Ø —Ö–æ—á—É —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ!")
def more_message(message):
    chat_id = message.chat.id

    text = "–í –æ—Ç—Ä—è–¥–∞—Ö –µ—Å—Ç—å —Ç–∞–∫–æ–π –æ–±—â–∏—Ç–µ–ª—å–Ω—ã–π –∏ –≤–µ—Å—ë–ª—ã–π —á–µ–ª–æ–≤–µ–∫ - **–∫–æ–º–∏—Å—Å–∞—Ä**. " \
           "–í –ê—Ä—Ö–æ–Ω—Ç–µ —ç—Ç–æ –Ω–∞—à –ª—é–±–∏–º—ã–π [–î–∞–º–∏—Ä](https://vk.com/the.guydie) üòò \n\n" \
           "–ù–∞–ø–∏—à—É –µ–º—É, –æ–Ω –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç!"

    back_message(chat_id, text)


# –°–æ–±—Ä–∞–Ω–∏—è
@bot.message_handler(func=lambda message: message.text == "–°–æ–±—Ä–∞–Ω–∏—è –∏ –ø—Ä–æ—á–µ–µ...")
def meeting_message(message):
    chat_id = message.chat.id

    text = "–ú—ã –Ω–µ —Ç–æ–ª—å–∫–æ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ –∏ –≤–∫, –∞ –æ—á–µ–Ω—å –∂–¥—ë–º –∏–º–µ–Ω–Ω–æ —Ç–µ–±—è –Ω–∞ –Ω–∞—à–µ–º –ø–µ—Ä–≤–æ–º —Å–æ–±—Ä–∞–Ω–∏–∏," \
           "–∫–æ—Ç–æ—Ä–æ–µ —Å–æ—Å—Ç–æ–∏—Ç—Å—è:\n\n" \
           "üìç–ö–æ–≥–¥–∞? 28 –æ–∫—Ç—è–±—Ä—è (–≤—Ç–æ—Ä–Ω–∏–∫)\nüìç–í–æ —Å–∫–æ–ª—å–∫–æ?: 18:30 \nüìç–ì–¥–µ? –ù–ò–ö, 2.03\n\n" \
           "–ë–æ–ª—å—à–µ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π –≤ [–≥—Ä—É–ø–ø–µ –≤–∫](https://vk.com/sao_arhont)."

    back_message(chat_id, text, komissar=True)


@bot.message_handler(func=lambda message: message.text == "–ù–∞–∑–∞–¥")
def back_to_main(message):
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é
    start_dialog(message)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ª—é–±—ã—Ö –¥—Ä—É–≥–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda message: True)
def handle_other_messages(message):
    chat_id = message.chat.id

    bot.send_message(
        chat_id,
        "–ê –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–æ–≥–æ –¥–µ–ª–∞–ª–∏, –Ω—É–∂–Ω–æ –∂–º–∞–∫–∞—Ç—å –Ω–∞ –Ω–∏—Ö. \n"
        "–ò–ª–∏ –¥–ª—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è –Ω–∞–ø–∏—à–∏ /start "
    )


# mes - —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ —Å–º–µ–Ω–æ–π –º–µ–Ω—é –Ω–∞ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
# komissar - –Ω—É–∂–Ω–æ –ª–∏ –≤—ã–≤–æ–¥–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø—Ä–æ –∫–æ–º–∏—Å—Å–∞—Ä–∞, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é False
# other_btn - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥—Ä—É–≥–∏—Ö –∫–Ω–æ–ø–æ–∫ –≤ –º–µ–Ω—é - —Ñ–æ—Ä–º–∞—Ç list
def back_message(chat_id, mes="–ñ–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ...", komissar=False, other_btn=None):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    if other_btn is not None:
        n = len(other_btn)
        for i in range(0, n - 3, 3):
            btn1 = types.KeyboardButton(other_btn[i])
            btn2 = types.KeyboardButton(other_btn[i + 1])
            btn3 = types.KeyboardButton(other_btn[i + 2])
            markup.add(btn1, btn2, btn3)
        if n % 3 == 1:
            markup.add(types.KeyboardButton(other_btn[n - 1]))
        if n % 3 == 2:
            markup.add(types.KeyboardButton(other_btn[n - 2], other_btn[n - 1]))

    btn1 = types.KeyboardButton("–ù–∞–∑–∞–¥")
    markup.add(btn1)
    if komissar:
        btn2 = types.KeyboardButton("–Ø —Ö–æ—á—É —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ!")
        markup.add(btn2)

    bot.send_message(
        chat_id,
        mes,
        reply_markup=markup,
        parse_mode='Markdown'
    )


if __name__ == "__main__":
    logging.info("=== –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω ===")
    bot.infinity_polling()
