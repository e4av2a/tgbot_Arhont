import telebot
from telebot import types
from json_handler import ExpeditionsData

BOT_TOKEN = ""
bot = telebot.TeleBot(BOT_TOKEN)

# —Å—Å—ã–ª–∫–∞ –Ω–∞ –∞–Ω–∫–µ—Ç—É –∫–∞–Ω–¥–∏–¥–∞—Ç–∞
url_anketa = "https://forms.gle/BoXqMuKwVwyphhn58"

expeditions_data = ExpeditionsData('history.json')

# —á—Ç–æ —Ö–æ—Ç–µ–ª–æ—Å—å –±—ã –µ—â—ë:
# –≤—Å–µ –±–æ–ª—å—à–∏–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –±–ª–æ–∫–∏ –∑–∞–ø–∏—Ö–Ω—É—Ç—å –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã –∏ –ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∏—Ö


@bot.message_handler(commands=['start', 'restart'])
def start_dialog(message):
    chat_id = message.chat.id

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)

    btn1 = types.KeyboardButton("–ö—Ç–æ –≤—ã?")
    btn2 = types.KeyboardButton("–í–∞–π–±?")
    btn3 = types.KeyboardButton("–ê —á—ë –∫–æ–ø–∞–µ—Ç–µ??")
    btn4 = types.KeyboardButton("–ê –∫–∞–∫ –∫ –≤–∞–º –ø–æ–ø–∞—Å—Ç—å?")
    btn5 = types.KeyboardButton("–°–æ–±—Ä–∞–Ω–∏—è –∏ –ø—Ä–æ—á–µ–µ...")
    markup.add(btn1, btn2, btn3, btn4, btn5)

    welcome_text = (
        "–ú—ã —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–∏–π –∞—Ä—Ö–µ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –æ—Ç—Ä—è–¥ \"–ê—Ä—Ö–æ–Ω—Ç\" üíÄ \n"
        "–ú–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å –≤–æ–ø—Ä–æ—Å..."
    )

    bot.send_message(chat_id, welcome_text, reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "–ö—Ç–æ –≤—ã?")
def who_we_are(message):
    chat_id = message.chat.id

    # bot.answer_callback_query(chat_id, "–ö—Ç–æ –º—ã?")
    about_us = "–ú—ã –ø–µ—Ä–≤—ã–π —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–∏–π –∞—Ä—Ö–µ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –æ—Ç—Ä—è–¥ –≤ –†–æ—Å—Å–∏–∏, " \
               "–∞ –∫–∞–∂–¥–æ–µ –ª–µ—Ç–æ –ø—Ä–æ–≤–æ–¥–∏–º –≤ —ç–∫—Å–ø–µ–¥–∏—Ü–∏—è—Ö, –ø—É—Ç–µ—à–µ—Å—Ç–≤—É—è –ø–æ –≤—Å–µ–π —Å—Ç—Ä–∞–Ω–µ –∏ –¥–∞–∂–µ –∑–∞ –≥—Ä–∞–Ω–∏—Ü–µ–π!\n\n" \
               "–í—ã–µ–∑–∂–∞–µ–º –º—ã –æ–±—ã—á–Ω–æ –≤ –∫–æ–Ω—Ü–µ –∏—é–ª—è, –∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è —Ç–æ–ª—å–∫–æ –∫ –Ω–∞—á–∞–ª—É —É—á—ë–±—ã. " \
               "–ê—Ä—Ö–æ–Ω—Ç - —ç—Ç–æ –Ω–µ —Ç–æ–ª—å–∫–æ –ø—Ä–æ –∞—Ä—Ö–µ–æ–ª–æ–≥–∏—é, –Ω–µ–∑–∞–±—ã–≤–∞–µ–º–æ–µ –ª–µ—Ç–æ, " \
               "–Ω–æ –∏ –ø—Ä–æ —Å–∞–º—ã—Ö –±–ª–∏–∑–∫–∏—Ö –∏ –≤–µ—Ä–Ω—ã—Ö –¥—Ä—É–∑–µ–π.\n\n"

    bot.send_message(chat_id, about_us)

    try:
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ –∏–∑ —Ñ–∞–π–ª–∞
        with open('images/who.jpg', 'rb') as photo:
            bot.send_photo(chat_id, photo)
    except FileNotFoundError:
        bot.send_message(chat_id, "–¢—É—Ç –º–æ–≥–ª–æ –±—ã—Ç—å –∫—Ä–∞—Å–∏–≤–æ–µ —Ñ–æ—Ç–æ... –ù–æ –ø–æ—Å–º–æ—Ç—Ä–∏ –ø–æ–∫–∞ —Å–∞–º –≤ "
                                  "[–≥—Ä—É–ø–ø–µ –≤ –≤–∫](https://vk.com/sao_arhont)!",
                         parse_mode='Markdown')

    back_message(chat_id)


# –í–∞–π–±
@bot.message_handler(func=lambda message: message.text == "–í–∞–π–±?")
def vibe_message(message):
    chat_id = message.chat.id

    text = "–ö–∞–∂–¥—ã–π –æ—Ç—Ä—è–¥ –∏–º–µ–µ—Ç —Å–≤–æ–π –Ω–µ–ø–æ–≤—Ç–æ—Ä–∏–º—ã–π –≤–∞–π–±. " \
           "–ï–≥–æ —Ç—ã —Å–º–æ–∂–µ—à—å –æ—â—É—Ç–∏—Ç—å, –ø–æ–µ—Ö–∞–≤ —Å –Ω–∞–º–∏ –Ω–∞ —Å–µ–∑–æ–Ω, " \
           "–Ω–æ –º—ã –ø–æ–ø—Ä–æ–±—É–µ–º –ø–µ—Ä–µ–¥–∞—Ç—å —á–µ—Ä–µ–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –º—É–∑—ã–∫—É –∏ –≤–∏–¥–µ–æ."

    markup_inline = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton("—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ üì∏", url="https://vk.com/album-47403562_304419511")
    btn2 = types.InlineKeyboardButton("–º—É–∑—ã–∫–∞ üéß", url="https://vk.com/audios-47403562?z=audio_playlist-47403562_1")
    btn3 = types.InlineKeyboardButton("–≤–∏–¥–µ–æ üéû",
                                      url="https://vk.com/sao_arhont?z=video-47403562_456239114%2Fvideos-47403562%2Fpl_-47403562_-2")
    markup_inline.add(btn1)
    markup_inline.add(btn2, btn3)

    bot.send_message(
        chat_id,
        text,
        reply_markup=markup_inline,
        parse_mode='Markdown'
    )

    back_message(chat_id)


# –ß–æ–∫–æ–ø–∞–π–∫–∏
@bot.message_handler(func=lambda message: message.text in ["–ê —á—ë –∫–æ–ø–∞–µ—Ç–µ??", "–ê —á—ë –µ—â—ë –∫–æ–ø–∞–µ—Ç–µ?"])
def dig_message(message):
    chat_id = message.chat.id

    markup_inline = types.InlineKeyboardMarkup()
    btn_2017 = types.InlineKeyboardButton("2017 –≥.", callback_data="2017")
    btn_2018 = types.InlineKeyboardButton("2018 –≥.", callback_data="2018")

    markup_inline.add(btn_2017, btn_2018)

    bot.send_message(
        chat_id,
        "–£ –ê—Ä—Ö–æ–Ω—Ç–∞ –±—ã–ª–æ –º–Ω–æ–≥–æ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π, –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å –ø—Ä–æ –ª—é–±—É—é –∏–∑ –Ω–∏—Ö:",
        reply_markup=markup_inline,
        parse_mode='Markdown'
    )

    back_message(chat_id, mes="–ú–æ–∂–µ—à—å, –∫–æ–Ω–µ—á–Ω–æ, –Ω–∞–∑–∞–¥ –≤–µ—Ä–Ω—É—Ç—å—Å—è", komissar=True)


# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —ç–∫—Å–ø–µ–¥–∏—Ü–∏–∏ –∑–∞ –≥–æ–¥
@bot.callback_query_handler(func=lambda call: call.data in ["2017", "2018"])
def year_of_expedition(call):
    chat_id = call.message.chat.id

    bot.send_message(
        chat_id,
        expeditions_data.get_expedition_info(int(call.data)),
        parse_mode='Markdown'
    )

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("–ê —á—ë –µ—â—ë –∫–æ–ø–∞–µ—Ç–µ?")
    markup.add(btn1)

    bot.send_message(
        chat_id,
        "–•–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ?",
        reply_markup=markup,
        parse_mode='Markdown'
    )


# –°—Å—ã–ª–∫–∏
@bot.message_handler(func=lambda message: message.text == "–ê –∫–∞–∫ –∫ –≤–∞–º –ø–æ–ø–∞—Å—Ç—å?")
def search_message(message):
    chat_id = message.chat.id

    text = "–í–æ—Ç —Å—Å—ã–ª–æ—á–∫–∏, –≥–¥–µ –±—É–¥—É—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏: "

    markup_inline = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton("–Ω–∞—à —Ç–≥", url="https://t.me/CAO_arhont")
    btn2 = types.InlineKeyboardButton("–Ω–∞—à –≤–∫", url="https://vk.com/sao_arhont")
    markup_inline.add(btn1, btn2)

    bot.send_message(
        chat_id,
        text,
        reply_markup=markup_inline,
        parse_mode='Markdown'
    )

    text2 = "–ê –µ—â—ë –∑–∞–ø–æ–ª–Ω—è–π –∞–Ω–∫–µ—Ç—É –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –∏ —Å —Ç–æ–±–æ–π –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–≤—è–∂—É—Ç—Å—è!"

    markup_inline2 = types.InlineKeyboardMarkup()
    btn3 = types.InlineKeyboardButton("–∞–Ω–∫–µ—Ç–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞", url=url_anketa)
    markup_inline2.add(btn3)

    bot.send_message(
        chat_id,
        text2,
        reply_markup=markup_inline2,
        parse_mode='Markdown'
    )

    back_message(chat_id, "–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –Ω–∞—Å!", True)


# –ö–æ–º–∏—Å—Å–∞—Ä
@bot.message_handler(func=lambda message: message.text == "–Ø —Ö–æ—á—É —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ!")
def more_message(message):
    chat_id = message.chat.id

    text = "–í –æ—Ç—Ä—è–¥–∞—Ö –µ—Å—Ç—å —Ç–∞–∫–æ–π –æ–±—â–∏—Ç–µ–ª—å–Ω—ã–π –∏ –≤–µ—Å—ë–ª—ã–π —á–µ–ª–æ–≤–µ–∫ - **–∫–æ–º–∏—Å—Å–∞—Ä**. " \
           "–í –ê—Ä—Ö–æ–Ω—Ç–µ —ç—Ç–æ –Ω–∞—à –ª—é–±–∏–º—ã–π [–î–∞–º–∏—Ä](https://vk.com/the.guydie) üòò \n\n" \
           "–ù–∞–ø–∏—à—É –µ–º—É, –æ–Ω –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç!"

    back_message(chat_id, text)


@bot.message_handler(func=lambda message: message.text == "–ù–∞–∑–∞–¥")
def back_to_main(message):
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é
    start_dialog(message)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ª—é–±—ã—Ö –¥—Ä—É–≥–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda message: True)
def handle_other_messages(message):
    chat_id = message.chat.id

    bot.send_message(
        chat_id,
        "–ê –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–æ–≥–æ –¥–µ–ª–∞–ª–∏, –Ω—É–∂–Ω–æ –∂–º–∞–∫–∞—Ç—å –Ω–∞ –Ω–∏—Ö. \n"
        "–ò–ª–∏ –¥–ª—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è –Ω–∞–ø–∏—à–∏ /start "
    )


# mes - —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ —Å–º–µ–Ω–æ–π –º–µ–Ω—é –Ω–∞ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
# komissar - –Ω—É–∂–Ω–æ –ª–∏ –≤—ã–≤–æ–¥–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø—Ä–æ –∫–æ–º–∏—Å—Å–∞—Ä–∞, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é False
def back_message(chat_id, mes="–ñ–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ...", komissar=False):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("–ù–∞–∑–∞–¥")
    markup.add(btn1)
    if komissar:
        btn2 = types.KeyboardButton("–Ø —Ö–æ—á—É —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ!")
        markup.add(btn2)

    bot.send_message(
        chat_id,
        mes,
        reply_markup=markup,
        parse_mode='Markdown'
    )


if __name__ == "__main__":
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    bot.infinity_polling()
